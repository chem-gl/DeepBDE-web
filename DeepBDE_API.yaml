openapi: 3.0.3
info:
  title: DeepBDE API
  version: 1.0.0
  description: "API for Bond Dissociation Energy (BDE) prediction using DeepBDE machine\
    \ learning model.\nBased on research from https://github.com/MSRG/DeepBDE/.\n\n\
    ## API Workflow (English)\n\n### Step 1: Get Molecule Information\n**POST** `/api/v1/predict/info/`\
    \ - Get molecule 2D structure, atoms, and bonds information\n- Input: SMILES string\n\
    - Output: Canonical SMILES, SVG image, atoms/bonds coordinates, molecule ID\n\n\
    ### Step 2: Get Canonical SMILES (Optional)\n**POST** `/api/v1/predict/info-smile-canonical/`\
    \ - Get canonical SMILES and molecule ID\n- Input: SMILES string\n- Output: Canonical\
    \ SMILES with explicit hydrogens and unique molecule ID\n\n### Step 3: Predict\
    \ BDE for Bonds\n**Single Bond**: **POST** `/api/v1/predict/single/` - Predict\
    \ BDE for one specific bond\n**Multiple Bonds**: **POST** `/api/v1/predict/multiple/`\
    \ - Predict BDE for multiple bonds\n**All Bonds**: **POST** `/api/v1/infer/all/`\
    \ - Predict BDE for all fragmentable bonds\n\n### Step 4: Fragment Analysis\n\
    **POST** `/api/v1/BDEEvaluate/` - Generate molecular fragments in SMILES or XYZ\
    \ format\n**POST** `/api/v1/ObtainBDEFragments/` - Find bond that generates specific\
    \ fragments\n**POST** `/api/v1/predict/check/` - Verify fragments generated by\
    \ bond cleavage\n\n### Step 5: Generate Reports\n**POST** `/api/v1/download_report/`\
    \ - Download complete BDE analysis report in TXT format\n\n### Additional Endpoints\n\
    **GET** `/api/v1/health/` - Health check endpoint\n**GET** `/api/schema/` - OpenAPI\
    \ schema (YAML/JSON)\n**GET** `/api/docs/` - Interactive Swagger documentation\n\
    **GET** `/api/redoc/` - ReDoc documentation\n\n---\n\n## Flujo de Uso de la API\
    \ (Español)\n\n### Paso 1: Obtener Información de la Molécula\n**POST** `/api/v1/predict/info/`\
    \ - Obtener estructura 2D, átomos y enlaces de la molécula\n- Entrada: Cadena\
    \ SMILES\n- Salida: SMILES canónico, imagen SVG, coordenadas de átomos/enlaces,\
    \ ID de molécula\n\n### Paso 2: Obtener SMILES Canónico (Opcional)\n**POST** `/api/v1/predict/info-smile-canonical/`\
    \ - Obtener SMILES canónico e ID de molécula\n- Entrada: Cadena SMILES\n- Salida:\
    \ SMILES canónico con hidrógenos explícitos e ID único de molécula\n\n### Paso\
    \ 3: Predecir BDE para Enlaces\n**Enlace Individual**: **POST** `/api/v1/predict/single/`\
    \ - Predecir BDE para un enlace específico\n**Múltiples Enlaces**: **POST** `/api/v1/predict/multiple/`\
    \ - Predecir BDE para múltiples enlaces\n**Todos los Enlaces**: **POST** `/api/v1/infer/all/`\
    \ - Predecir BDE para todos los enlaces fragmentables\n\n### Paso 4: Análisis\
    \ de Fragmentos\n**POST** `/api/v1/BDEEvaluate/` - Generar fragmentos moleculares\
    \ en formato SMILES o XYZ\n**POST** `/api/v1/ObtainBDEFragments/` - Encontrar\
    \ enlace que genera fragmentos específicos\n**POST** `/api/v1/predict/check/`\
    \ - Verificar fragmentos generados por escisión de enlace\n\n### Paso 5: Generar\
    \ Reportes\n**POST** `/api/v1/download_report/` - Descargar reporte completo de\
    \ análisis BDE en formato TXT\n\n### Endpoints Adicionales\n**GET** `/api/v1/health/`\
    \ - Endpoint de verificación de salud\n**GET** `/api/schema/` - Esquema OpenAPI\
    \ (YAML/JSON)\n**GET** `/api/docs/` - Documentación interactiva Swagger\n**GET**\
    \ `/api/redoc/` - Documentación ReDoc\n\n## Technical Notes / Notas Técnicas\n\
    \n- Only single, non-cyclic bonds can be predicted / Solo enlaces simples y no\
    \ cíclicos pueden ser predichos\n- BDE values are returned in kcal/mol / Los valores\
    \ BDE se devuelven en kcal/mol\n- Molecule IDs are SHA256 hashes (16 chars) /\
    \ Los IDs de molécula son hashes SHA256 (16 caracteres)\n- Supports SMILES input\
    \ with automatic canonicalization / Soporta entrada SMILES con canonicalización\
    \ automática\n- Caching system for improved performance / Sistema de caché para\
    \ mejor rendimiento \n\n\n- cache path: api/controllers/_cache"
paths:
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en
          - es
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/BDEEvaluate/:
    post:
      operationId: v1_BDEEvaluate_create
      description: "\n        Genera fragmentos moleculares en formato SMILES o XYZ.\n\
        \        Generates molecular fragments in SMILES or XYZ format.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BDEEvaluateRequest'
            examples:
              EntradaDeEjemplo/ExampleInput:
                value:
                  smiles: CCO
                  molecule_id: a1b2c3d4e5f6a7b8
                  bonds_idx:
                  - 0
                  - 1
                  export_smiles: true
                  export_xyz: false
                summary: Entrada de ejemplo / Example input
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BDEEvaluateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BDEEvaluateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_FragmentResponseData'
              examples:
                EntradaDeEjemplo/ExampleInput:
                  value:
                    smiles: CCO
                    molecule_id: a1b2c3d4e5f6a7b8
                    bonds_idx:
                    - 0
                    - 1
                    export_smiles: true
                    export_xyz: false
                  summary: Entrada de ejemplo / Example input
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles_canonical: CCO
                      molecule_id: a1b2c3d4e5f6a7b8
                      bonds_predicted: []
                      smiles_list: null
                      xyz_block: null
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorFormatoInválido:
                  value:
                    status: error
                    detail: Formato no soportado
                  summary: Error por formato inválido
          description: Error de validación / Validation error
  /api/v1/ObtainBDEFragments/:
    post:
      operationId: v1_ObtainBDEFragments_create
      description: "\n        Obtiene la energía de disociación de enlaces para una\
        \ molécula basada en SMILES y los fragmentos proporcionados.\n        Obtains\
        \ the dissociation energy of bonds for a molecule based on SMILES and provided\
        \ fragments.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtainBDEFragmentsRequest'
            examples:
              EntradaDeEjemplo/ExampleInput:
                value:
                  smiles: CCO
                  fragments:
                    Smile1: C
                    Smile2: O
                summary: Entrada de ejemplo / Example input
              EntradaAlternativa/AlternativeInput:
                value:
                  smiles: C1=CC=CC=C1
                  fragments:
                    Smile1: C
                    Smile2: C
                summary: Entrada alternativa / Alternative input
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObtainBDEFragmentsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObtainBDEFragmentsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtainBDEFragmentsResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles_canonical: CCO
                      molecule_id: a1b2c3d4e5f6a7b8
                      bonds_predicted:
                        idx: 1
                        bde: 95.0
                        begin_atom_idx: 0
                        end_atom_idx: 1
                        bond_atoms: C-O
                        bond_type: single
                        is_fragmentable: true
                      fragments:
                        Smile1: C
                        Smile2: O
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorSMILESInválido:
                  value:
                    status: error
                    detail: Formato SMILES inválido
                  summary: Error por SMILES inválido
          description: Error de validación / Validation error
  /api/v1/download_report/:
    post:
      operationId: v1_download_report_create
      description: "\n        Genera y descarga un informe txt con los resultados\
        \ de la predicción para la molécula \n        Generates and downloads a TXT\
        \ report with the prediction results for the indicated molecule \n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadReportRequest'
            examples:
              EntradaDeEjemplo/ExampleInput:
                value:
                  smiles: CCO
                  format: txt
                summary: Entrada de ejemplo / Example input
              EntradaAlternativa/AlternativeInput:
                value:
                  smiles: C1=CC=CC=C1
                  format: txt
                summary: Entrada alternativa / Alternative input
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DownloadReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DownloadReportRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_DownloadReportResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      type: pdf
                      report_base64: JVBERi0xLjQKJcfs...
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorFormatoInválido:
                  value:
                    status: error
                    detail: Formato no soportado
                  summary: Error por formato inválido
          description: Error de validación / Validation error
  /api/v1/infer/all/:
    post:
      operationId: v1_infer_all_create
      description: "\n        Predice las energías de disociación para todos los enlaces\
        \ simples de la molécula dada.\n        Predicts the dissociation energies\
        \ for all single bonds of the given molecule.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferAllRequest'
            examples:
              EntradaDeEjemplo/ExampleInput:
                value:
                  smiles: CCO
                summary: Entrada de ejemplo / Example input
              EntradaAlternativa/AlternativeInput:
                value:
                  smiles: C1=CC=CC=C1
                summary: Entrada alternativa / Alternative input
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InferAllRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InferAllRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_InferAllResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles_canonical: CCO
                      molecule_id: a1b2c3d4e5f6a7b8
                      bonds:
                      - idx: 1
                        bde: 95.0
                        begin_atom_idx: 0
                        end_atom_idx: 1
                        bond_atoms: C-O
                        bond_type: single
                        is_fragmentable: true
                      - idx: 2
                        bde: 100.0
                        begin_atom_idx: 1
                        end_atom_idx: 2
                        bond_atoms: C-C
                        bond_type: single
                        is_fragmentable: true
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorSMILESInválido:
                  value:
                    status: error
                    detail: Formato SMILES inválido
                  summary: Error por SMILES inválido
          description: Error de validación / Validation error
  /api/v1/predict/check/:
    post:
      operationId: v1_predict_check_create
      description: "\n        Verifica productos generados por la escisión de un enlace\
        \ y predice la BDE.\n        Verifies products generated by the cleavage of\
        \ a bond and predicts the BDE.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictCheckRequest'
            examples:
              EntradaDeEjemplo/ExampleInput:
                value:
                  smiles: CCO
                  bond_idx: 1
                  molecule_id: 150018eccd174140
                  products:
                  - '[CH2][OH]'
                  - '[CH3]'
                summary: Entrada de ejemplo / Example input
              EntradaAlternativa/AlternativeInput:
                value:
                  smiles: CCO
                  bond_idx: 1
                  molecule_id: 150018eccd174140
                  products:
                  - '[CH2][OH]'
                  - '[CH3]'
                summary: Entrada alternativa / Alternative input
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PredictCheckRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PredictCheckRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_PredictCheckResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles_canonical: CCO
                      bond:
                        idx: 1
                        bde: 95.0
                        begin_atom_idx: 0
                        end_atom_idx: 1
                        bond_atoms: C-O
                        bond_type: single
                        is_fragmentable: true
                      are_same_products: true
                      products:
                      - CC
                      - O
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorProductosInválidos:
                  value:
                    status: error
                    detail: Productos no coinciden con los esperados
                  summary: Error por productos inválidos
          description: Error de validación / Validation error
  /api/v1/predict/info/:
    post:
      operationId: v1_predict_info_create
      description: "\n        Devuelve información enriquecida de la molécula: SMILES\
        \ canónico, imagen SVG, metadatos de canvas, posiciones de átomos y enlaces,\
        \ id único.\n        \n        Returns enriched information about the molecule:\
        \ canonical SMILES, SVG image, canvas metadata, atom and bond positions, unique\
        \ ID.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculeInfoRequest'
            examples:
              EjemploDeEntrada/ExampleInput:
                value:
                  smiles: CCO
                summary: Ejemplo de entrada / Example input
              EjemploAlternativo/AlternativeExample:
                value:
                  smiles: C1=CC=CC=C1
                summary: Ejemplo alternativo / Alternative example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MoleculeInfoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MoleculeInfoRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_MoleculeInfoResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles_canonical: CCO
                      image_svg: <svg>...</svg>
                      canvas:
                        width: 300
                        height: 300
                      atoms:
                        '0':
                          x: 50.0
                          y: 100.0
                          symbol: C
                          smiles: '[CH3]'
                        '1':
                          x: 150.0
                          y: 100.0
                          symbol: C
                          smiles: '[CH2]'
                        '2':
                          x: 250.0
                          y: 100.0
                          symbol: O
                          smiles: O
                      bonds:
                        '0':
                          start: 0
                          end: 1
                          start_coords:
                            x: 50.0
                            y: 100.0
                          end_coords:
                            x: 150.0
                            y: 100.0
                          bond_atoms: C-C
                          bond_type: single
                        '1':
                          start: 1
                          end: 2
                          start_coords:
                            x: 150.0
                            y: 100.0
                          end_coords:
                            x: 250.0
                            y: 100.0
                          bond_atoms: C-O
                          bond_type: single
                      molecule_id: a1b2c3d4e5f6a7b8
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorSMILESInválido:
                  value:
                    status: error
                    detail: Formato SMILES inválido
                  summary: Error por SMILES inválido
          description: Error de validación / Validation error
  /api/v1/predict/info-smile-canonical/:
    post:
      operationId: v1_predict_info_smile_canonical_create
      description: "        \n        Devuelve el SMILES canónico de una molécula\
        \ con hidrógenos explícitos.\n        Returns the canonical SMILES of a molecule\
        \ with explicit hydrogens.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoleculeSmileCanonicalRequest'
            examples:
              EjemploDeEntrada/ExampleInput:
                value:
                  smiles: CCO
                summary: Ejemplo de entrada / Example input
              EjemploAlternativo/AlternativeExample:
                value:
                  smiles: C1=CC=CC=C1
                summary: Ejemplo alternativo / Alternative example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MoleculeSmileCanonicalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MoleculeSmileCanonicalRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_MoleculeInfoResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data: CCO
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorSMILESInválido:
                  value:
                    status: error
                    detail: Formato SMILES inválido
                  summary: Error por SMILES inválido
          description: Error de validación / Validation error
  /api/v1/predict/multiple/:
    post:
      operationId: v1_predict_multiple_create
      description: "\n        Predice las energías de disociación para varios enlaces\
        \ de la molécula.\n        Predicts the dissociation energies for multiple\
        \ bonds of the molecule.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictMultipleRequest'
            examples:
              EntradaDeEjemplo/ExampleInput:
                value:
                  smiles: CCO
                  bond_indices:
                  - 1
                  - 2
                  molecule_id: 150018eccd174140
                summary: Entrada de ejemplo / Example input
              EntradaAlternativa/AlternativeInput:
                value:
                  smiles: C1=CC=CC=C1
                  bond_indices:
                  - 0
                  - 2
                  - 3
                  molecule_id: h1g2f3e4d5c6b7a8
                summary: Entrada alternativa / Alternative input
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PredictMultipleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PredictMultipleRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_PredictMultipleResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles: CCO
                      molecule_id: a1b2c3d4e5f6a7b8
                      bonds:
                      - idx: 1
                        bde: 95.0
                        begin_atom_idx: 0
                        end_atom_idx: 1
                        bond_atoms: C-O
                        bond_type: single
                        is_fragmentable: true
                      - idx: 2
                        bde: 100.0
                        begin_atom_idx: 1
                        end_atom_idx: 2
                        bond_atoms: C-C
                        bond_type: single
                        is_fragmentable: true
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorÍndicesDeEnlaceInválidos:
                  value:
                    status: error
                    error:
                      code: BOND_INDEX_OUT_OF_RANGE
                      message: Índices de enlace fuera de rango
                  summary: Error por índices de enlace inválidos
          description: Error de validación / Validation error
  /api/v1/predict/single/:
    post:
      operationId: v1_predict_single_create
      description: "\n        Predice la energía de disociación para un enlace específico\
        \ de la molécula.\n        \n        Predicts the dissociation energy for\
        \ a specific bond of the molecule.\n        "
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictSingleRequest'
            examples:
              EjemploDeEntrada/ExampleInput:
                value:
                  smiles: CCO
                  bond_idx: 1
                  molecule_id: 150018eccd174140
                summary: Ejemplo de entrada / Example input
              EjemploAlternativo/AlternativeExample:
                value:
                  smiles: C1=CC=CC=C1
                  bond_idx: 2
                  molecule_id: 4b7620ed22c55dfd
                summary: Ejemplo alternativo / Alternative example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PredictSingleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PredictSingleRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_PredictSingleResponseData'
              examples:
                EjemploExitoso:
                  value:
                    status: success
                    data:
                      smiles_canonical: CCO
                      bond:
                        idx: 1
                        bde: 95.0
                        begin_atom_idx: 0
                        end_atom_idx: 1
                        bond_atoms: C-O
                        bond_type: single
                        is_fragmentable: true
                    error: null
                  summary: Ejemplo exitoso
          description: Respuesta exitosa / Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse_NoneType'
              examples:
                ErrorPorÍndiceDeEnlaceInválido:
                  value:
                    status: error
                    detail: Índice de enlace fuera de rango
                  summary: Error por índice de enlace inválido
          description: Error de validación / Validation error
components:
  schemas:
    APIResponse_DownloadReportResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/DownloadReportResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_DownloadReportResponseData
      type: object
    APIResponse_FragmentResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/FragmentResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_FragmentResponseData
      type: object
    APIResponse_InferAllResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/InferAllResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_InferAllResponseData
      type: object
    APIResponse_MoleculeInfoResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/MoleculeInfoResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_MoleculeInfoResponseData
      type: object
    APIResponse_NoneType:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          default: null
          title: Data
          type: 'null'
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_NoneType
      type: object
    APIResponse_PredictCheckResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/PredictCheckResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_PredictCheckResponseData
      type: object
    APIResponse_PredictMultipleResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/PredictMultipleResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_PredictMultipleResponseData
      type: object
    APIResponse_PredictSingleResponseData:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: success
          title: Status
        data:
          anyOf:
          - $ref: '#/components/schemas/PredictSingleResponseData'
          - type: 'null'
          default: null
        error:
          anyOf:
          - $ref: '#/components/schemas/ErrorDetail'
          - type: 'null'
          default: null
      title: APIResponse_PredictSingleResponseData
      type: object
    Atom2D:
      description: |-
        Información 2D de un átomo para visualización y metadatos.
        - x: Coordenada X
        - y: Coordenada Y
        - symbol: Símbolo químico del átomo (ej. 'C', 'O')
        - smiles: SMILES del átomo (opcional, para átomos complejos)
      properties:
        x:
          title: X
          type: number
        y:
          title: Y
          type: number
        symbol:
          title: Symbol
          type: string
        smiles:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Smiles
      required:
      - x
      - y
      - symbol
      title: Atom2D
      type: object
    BDEEvaluateRequest:
      description: |-
        Entrada para /fragment/.
        - smiles: SMILES con hidrógenos explícitos
        - molecule_id: ID de la molécula (opcional si se proporcionan fragmentos)
        - bonds_idx: Lista de índices de enlaces (opcional si se proporcionan fragmentos)
        - export_smiles: Indica si se debe exportar la lista de SMILES de los fragmentos
        - export_xyz: Indica si se debe exportar el bloque XYZ de los fragmentos
      properties:
        smiles:
          title: Smiles
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bonds_idx:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Bonds Idx
        export_smiles:
          default: false
          title: Export Smiles
          type: boolean
        export_xyz:
          default: false
          title: Export Xyz
          type: boolean
      required:
      - smiles
      - molecule_id
      - bonds_idx
      title: BDEEvaluateRequest
      type: object
    Bond2D:
      description: |-
        Información 2D de un enlace para visualización y metadatos.
        - start: Índice del átomo inicial
        - end: Índice del átomo final
        - start_coords: Coordenadas del átomo inicial
        - end_coords: Coordenadas del átomo final
        - bond_atoms: Representación legible del enlace (ej. 'C-O')
      properties:
        start:
          title: Start
          type: integer
        end:
          title: End
          type: integer
        start_coords:
          additionalProperties:
            type: number
          title: Start Coords
          type: object
        end_coords:
          additionalProperties:
            type: number
          title: End Coords
          type: object
        bond_atoms:
          title: Bond Atoms
          type: string
        bond_type:
          allOf:
          - $ref: '#/components/schemas/BondTypeEnum'
          default: single
          title: Bond Type
      required:
      - start
      - end
      - start_coords
      - end_coords
      - bond_atoms
      title: Bond2D
      type: object
    BondTypeEnum:
      enum:
      - single
      - double
      - triple
      - aromatic
      type: string
    DownloadReportRequest:
      description: |-
        Entrada para /download_report/.
        - smiles: SMILES de la molécula
        - format:  'txt'
      properties:
        smiles:
          title: Smiles
          type: string
        format:
          title: Format
          type: string
      required:
      - smiles
      - format
      title: DownloadReportRequest
      type: object
    DownloadReportResponseData:
      description: |-
        Salida de /download_report/.
        - report_base64: Reporte en base64
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          default: pdf
          title: Type
        report_base64:
          title: Report Base64
          type: string
      required:
      - report_base64
      title: DownloadReportResponseData
      type: object
    ErrorCode:
      description: Enumeración de códigos de error estándar de la API.
      enum:
      - SMILES_INVALID
      - BOND_INDEX_OUT_OF_RANGE
      - UNSUPPORTED_FORMAT
      - MISSING_EXPORT_OPTION
      title: ErrorCode
      type: string
    ErrorDetail:
      description: |-
        Detalle de error estándar para respuestas de la API.
        - code: Código de error único (ErrorCode).
        - message: Descripción amigable del error.
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          title: Message
          type: string
      required:
      - code
      - message
      title: ErrorDetail
      type: object
    FragmentResponseData:
      description: |-
        Salida de /fragment/.
        - smiles_canonical: SMILES canónico de la molécula original
        - molecule_id: ID de la molécula
        - bonds_predicted: Lista de enlaces predichos
        - smiles_list: Lista de SMILES de los fragmentos (opcional)
        - xyz_block: Bloque XYZ de los fragmentos (opcional)
      properties:
        smiles_canonical:
          title: Smiles Canonical
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bonds_predicted:
          items:
            $ref: '#/components/schemas/PredictedBond'
          title: Bonds Predicted
          type: array
        smiles_list:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          title: Smiles List
        xyz_block:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Xyz Block
      required:
      - smiles_canonical
      - molecule_id
      - bonds_predicted
      title: FragmentResponseData
      type: object
    Fragments:
      description: Fragmentos de la molécula.
      properties:
        Smile1:
          title: Smile1
          type: string
        Smile2:
          title: Smile2
          type: string
      required:
      - Smile1
      - Smile2
      title: Fragments
      type: object
    InferAllRequest:
      description: |-
        Entrada para /infer/all/.
        - smiles: SMILES de la molécula
      properties:
        smiles:
          title: Smiles
          type: string
      required:
      - smiles
      title: InferAllRequest
      type: object
    InferAllResponseData:
      description: |-
        Salida de /infer/all/.
        - smiles_canonical: SMILES canónico
        - molecule_id: ID de la molécula
        - bonds: Lista de detalles de enlaces
      properties:
        smiles_canonical:
          title: Smiles Canonical
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bonds:
          items:
            $ref: '#/components/schemas/PredictedBond'
          title: Bonds
          type: array
      required:
      - smiles_canonical
      - molecule_id
      - bonds
      title: InferAllResponseData
      type: object
    MoleculeInfoRequest:
      description: |-
        Entrada para /predict/.
        - smiles: SMILES de la molécula
      properties:
        smiles:
          title: Smiles
          type: string
      required:
      - smiles
      title: MoleculeInfoRequest
      type: object
    MoleculeInfoResponseData:
      description: |-
        Salida de /predict/.
        - smiles_canonical: SMILES canónico con hidrógenos explícitos
        - image_svg: Imagen SVG enriquecida
        - canvas: Metadatos del lienzo
        - atoms: Diccionario de información 2D de átomos
        - bonds: Diccionario de información 2D de enlaces
        - molecule_id: ID único (hash SHA256)
      properties:
        smiles_canonical:
          title: Smiles Canonical
          type: string
        image_svg:
          title: Image Svg
          type: string
        canvas:
          additionalProperties:
            type: integer
          title: Canvas
          type: object
        atoms:
          additionalProperties:
            $ref: '#/components/schemas/Atom2D'
          title: Atoms
          type: object
        bonds:
          additionalProperties:
            $ref: '#/components/schemas/Bond2D'
          title: Bonds
          type: object
        molecule_id:
          title: Molecule Id
          type: string
      required:
      - smiles_canonical
      - image_svg
      - canvas
      - atoms
      - bonds
      - molecule_id
      title: MoleculeInfoResponseData
      type: object
    MoleculeSmileCanonicalRequest:
      description: "Salida de /predict/info-smile-canonical/.\n- smiles: smile "
      properties:
        smiles:
          title: Smiles
          type: string
      required:
      - smiles
      title: MoleculeSmileCanonicalRequest
      type: object
    ObtainBDEFragmentsRequest:
      description: |-
        Entrada para /ObtainBDEFragments/.
        - smiles: SMILES de la molécula
        - fragments: Fragmentos de la molécula
      properties:
        smiles:
          title: Smiles
          type: string
        fragments:
          $ref: '#/components/schemas/Fragments'
      required:
      - smiles
      - fragments
      title: ObtainBDEFragmentsRequest
      type: object
    ObtainBDEFragmentsResponseData:
      description: |-
        Salida de /ObtainBDEFragments/.
        - smiles_canonical: SMILES canónico de la molécula original
        - molecule_id: ID de la molécula
        - bonds_predicted: Lista de enlaces predichos
        - fragments: Fragmentos de la molécula
      properties:
        smiles_canonical:
          title: Smiles Canonical
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bonds_predicted:
          $ref: '#/components/schemas/PredictedBond'
        fragments:
          $ref: '#/components/schemas/Fragments'
      required:
      - smiles_canonical
      - molecule_id
      - bonds_predicted
      - fragments
      title: ObtainBDEFragmentsResponseData
      type: object
    PredictCheckRequest:
      description: |-
        Entrada para /predict/check/.
        - smiles: SMILES original
        - bond_idx: Índice del enlace
        - products: Lista de SMILES esperados
      properties:
        smiles:
          title: Smiles
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bond_idx:
          title: Bond Idx
          type: integer
        products:
          items:
            type: string
          title: Products
          type: array
      required:
      - smiles
      - molecule_id
      - bond_idx
      - products
      title: PredictCheckRequest
      type: object
    PredictCheckResponseData:
      description: |-
        Salida de /predict/check/.
        - smiles_canonical: SMILES canónico
        - bond: Detalle del enlace analizado
        - products: Lista de SMILES resultantes
      properties:
        smiles_canonical:
          title: Smiles Canonical
          type: string
        bond:
          $ref: '#/components/schemas/PredictedBond'
        are_same_products:
          default: false
          title: Are Same Products
          type: boolean
        products:
          items:
            type: string
          title: Products
          type: array
      required:
      - smiles_canonical
      - bond
      - products
      title: PredictCheckResponseData
      type: object
    PredictMultipleRequest:
      description: |-
        Entrada para /predict/multiple/.
        - molecule_id: ID de la molécula
        - bond_indices: Lista de índices de enlaces
        - smiles: (opcional)
      properties:
        smiles:
          title: Smiles
          type: string
        bond_indices:
          items:
            type: integer
          title: Bond Indices
          type: array
        molecule_id:
          title: Molecule Id
          type: string
      required:
      - smiles
      - bond_indices
      - molecule_id
      title: PredictMultipleRequest
      type: object
    PredictMultipleResponseData:
      description: |-
        Salida de /predict/multiple/.
        - smiles: SMILES canónico
        - molecule_id: ID de la molécula
        - bonds: Lista de detalles de enlaces
      properties:
        smiles:
          title: Smiles
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bonds:
          items:
            $ref: '#/components/schemas/PredictedBond'
          title: Bonds
          type: array
      required:
      - smiles
      - molecule_id
      - bonds
      title: PredictMultipleResponseData
      type: object
    PredictSingleRequest:
      description: |-
        Entrada para /predict/single/.
        - smiles: SMILES de la molécula
        - molecule_id: ID único de la molécula
        - bond_idx: Índice del enlace (>= 0)
      properties:
        smiles:
          title: Smiles
          type: string
        molecule_id:
          title: Molecule Id
          type: string
        bond_idx:
          title: Bond Idx
          type: integer
      required:
      - smiles
      - molecule_id
      - bond_idx
      title: PredictSingleRequest
      type: object
    PredictSingleResponseData:
      description: |-
        Salida de /predict/single/.
        - smiles_canonical: SMILES canónico
        - bond: Detalle del enlace predicho
      properties:
        smiles_canonical:
          title: Smiles Canonical
          type: string
        bond:
          $ref: '#/components/schemas/PredictedBond'
      required:
      - smiles_canonical
      - bond
      title: PredictSingleResponseData
      type: object
    PredictedBond:
      description: |-
        Detalle de un enlace químico y su BDE predicha.
        - idx: Índice del enlace en la molécula.
        - bde: Energía de disociación predicha para el enlace.
        - begin_atom_idx: Índice del átomo inicial del enlace.
        - end_atom_idx: Índice del átomo final del enlace.
        - bond_atoms: Representación legible del enlace (ejemplo: 'C-O').
      properties:
        idx:
          title: Idx
          type: integer
        bde:
          anyOf:
          - type: number
          - type: 'null'
          title: Bde
        begin_atom_idx:
          title: Begin Atom Idx
          type: integer
        end_atom_idx:
          title: End Atom Idx
          type: integer
        bond_atoms:
          title: Bond Atoms
          type: string
        bond_type:
          allOf:
          - $ref: '#/components/schemas/BondTypeEnum'
          default: single
          title: Bond Type
        is_fragmentable:
          title: Is Fragmentable
          type: boolean
      required:
      - idx
      - bde
      - begin_atom_idx
      - end_atom_idx
      - bond_atoms
      - is_fragmentable
      title: PredictedBond
      type: object
    StatusEnum:
      enum:
      - success
      - error
      type: string
    TypeEnum:
      enum:
      - pdf
      - txt
      type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
